<?php

/**
 * This module provides github API integration.
 *
 * @author Gor Martsen <gor@me.com>
 */

 /**
 * Implements hook_githubapi_payload().
 */
function github_issues_githubapi_payload($event_name, $event){
  $expr = '/(?<!\S)#([0-9]*)/i';
  
  $repo = gitlc_github_rid_load($event['rid']);
  
  if($event_name == 'push'){
    watchdog('issues',print_r($event,true), WATCHDOG_ERROR);
    foreach($event['data']->commits as $commit){
      $match = NULL;
      $message = '';
      preg_match_all($expr, $commit->message, $match);
      if(!empty($match[1])){
        foreach($match[1] as $issue){
          $message .= 'itpatrol/test#' . $issue . " ";
        }
        
        if(!empty($message)){
          _post_message($commit->id, $message, $repo);
        }
      }
    }
  }
  
}

function _post_message($sha, $message, $repo) {
  watchdog('issues',$sha . " " . $message . " " . print_r($repo,true), WATCHDOG_ERROR);
  
  module_load_include('inc', 'githubapi', 'githubapi_class');
  $config = config('githubapi.settings');
  $token = $config->get('token');

  $githubapi = new GithubAPI();

  $githubapi->setOwnerName($repo->owner);
  $githubapi->setRepoName($repo->name);
  $githubapi->setToken($token);
  
  $settings = array(
    ':sha' => $sha,
    'body' => t('Link commit to mentioned issues: ') . $message,
  );
  $answer = $githubapi->createComment($settings);
  watchdog('issues',print_r($answer,true), WATCHDOG_ERROR);
}